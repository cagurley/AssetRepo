@model AssetRepo.Models.ProjectViewModel
@{
    var isEditMode = Model.ProjectId != null;
    ViewBag.Title = isEditMode ? "Edit " + Model.Title : "Add Project";
}

<h2>@Model.Title</h2>
<hr>
<div class="row">
    <div class="col-sm-6 col-xs-10">
        @using (Html.BeginForm(isEditMode ? "EditProject" : "AddProject", "Project"))
        {
            @Html.HiddenFor(m => m.ProjectId)
            <div class="form-group">
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="Category_ProjectCategoryId">Category</label>
                @Html.DropDownListFor(m => m.Category.ProjectCategoryId, ViewBag.ProjectCategories as IEnumerable<SelectListItem>, "Select a project category...", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Category.ProjectCategoryId, null, new { @class = "text-danger" })
            </div>
            if (isEditMode)
            {
                @Html.HiddenFor(m => m.Creator.ContributorId)
            }
            else
            {
                <div class="form-group">
                    <label for="Creator_ContributorId">Creating Contributor</label>
                    @Html.DropDownListFor(m => m.Creator.ContributorId, ViewBag.Contributors as IEnumerable<SelectListItem>, "Select the creating contributor...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Creator.ContributorId, null, new { @class = "text-danger" })
                </div>
            }
            @Html.HiddenFor(m => m.CreationDateTime)
            if (isEditMode)
            {
                <div class="form-group">
                    <label for="LastUpdater_ContributorId">Most Recent Contributor</label>
                    @Html.DropDownListFor(m => m.LastUpdater.ContributorId, ViewBag.Contributors as IEnumerable<SelectListItem>, "Select the most recent contributor...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastUpdater.ContributorId, null, new { @class = "text-danger" })
                </div>
            }
            else
            {
                //This is not passed during asset addition since this value will be null and set after submit by the controller.
                //@Html.HiddenFor(m => m.LastUpdater.ContributorId)
            }
            @Html.HiddenFor(m => m.LastUpdateDateTime)
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-dark">@(isEditMode ? "Save" : "Add")</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default text-dark" })
            @Html.ValidationSummary(null, new { @class = "alert alert-danger", style = "margin-top: 15px; padding: 10px 0;" });
        }
    </div>
</div>